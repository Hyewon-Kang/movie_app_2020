{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","key","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TA6BeA,MAzBf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OAAO,yBAAKC,UAAU,SAClB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,uBAAGK,UAAU,iBAAiBH,EAAQM,MAAM,EAAG,KAA/C,OACA,wBAAIH,UAAU,gBACTD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAON,UAAU,gBAAgBK,UCuIzEG,G,kNAzDdC,MAAQ,CACLC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAIAC,IAAMC,IAAI,4DAJV,gBAEAJ,EAFA,EACHK,KACJA,KAAOL,OAGV,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IALzB,2C,kEAQVQ,KAAKN,c,+BAEE,IAAD,EAEwBM,KAAKT,MAA3BC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,OACnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,kBAGD,yBAAKA,UAAU,UACZW,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACGZ,IAAKY,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA7DduB,IAAMC,YC1DxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4083f735.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }){\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"movie_year\">{year}</h5>\r\n            <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n            <ul className=\"movie_genres\">\r\n                {genres.map((genre, index) => <li key={index} className=\"genres_genre\">{genre}</li>)}\r\n            </ul>\r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\n//export써줘야 다른 곳에서 import 가능함! \r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\n/*\nfunction Food({ name, picture, rating }) {\n  return (\n    <div>\n      <h2>I Like {name}</h2>\n      <h4>{rating}/5</h4>\n      <img src={picture} alt={name}/>\n    </div>\n  );\n}\nconst foodILike = [\n  {\n    id:1,\n    name : \"kimchi\",\n    image : \"https://m.hansanggung.com/web/product/big/hansanggung1_44.jpg\",\n    rating: 5 \n  },\n  {\n    id:2,\n    name : \"samgiopsal\",\n    image : \"https://pds.joins.com/news/component/htmlphoto_mmdata/201702/27/117f5b49-1d09-4550-8ab7-87c0d82614de.jpg\",\n    rating: 4.9\n  },\n  {\n    id:3,\n    name : \"dduckboki\",\n    image : \"https://pbs.twimg.com/media/D_66s5wUcAI2927.jpg\",\n    rating: 4.8\n  },\n  {\n    id:4,\n    name : \"gyukatsu\",\n    image : \"https://cdn.imweb.me/upload/S201612185855798c0088d/5c9dc98cb8668.jpg\",\n    rating: 4.7\n  },\n  {\n    id:5,\n    name : \"chicken\",\n    image : \"https://lh3.googleusercontent.com/proxy/2ctCGnh45ICH3gx3cyGY42P1OYlfRGfvvOjppOB23L0CX_CIDZa91PYSiPc-VSujG_WGtIIm-nCgdIDc-v4EGSU9RyMRoeHv2lX4ngdJxqZRwCC9h4BUxFMzIDldCpFN\",\n    rating: 4.6\n  }\n];\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number\n};\nfunction App() {\n  return (\n    <div>\n      {foodILike.map(dish => (\n      <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n      ))}\n    </div>\n  );\n}\n*/\n\nclass App extends React.Component{\n\n  /*\n  constructor(props){\n    super(props); //호출하지 않으면 에러가 남\n    console.log(\"hello\");\n  }\n  add = () => {\n    this.setState(current =>({ count: current.count + 1 }));\n  };\n  minus = () => {\n    this.setState(current => ({ count: current.count - 1 }));\n  };\n  componentDidMount(){\n    console.log(\"component rendered\");\n  }\n  //update될 때마다 호출됨\n  componentDidUpdate(){\n    console.log(\"i just updated\");\n  }\n  //component가 떠날 때마다 호출됨\n  componentWillUnmount(){\n    console.log(\"Goodbye, cruel world\");\n  }\n  \n  */\n\n state = {\n    isLoading: true,\n    movies: []\n  };\n  //async는 비동기. await는 axious가 끝날 때까지 기다렸다가 실행\n  getMovies = async() => {\n    const {data: \n      {data: {movies}}\n    \n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    \n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading. . . </span>\n          </div>\n         ) : (\n           <div className=\"movies\">\n             {movies.map(movie => (\n               <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                  />\n             ))}\n           </div>\n         )}\n      </section>\n    );\n  }\n}\n/* \nfunction App()는 html Component\nreact application은 !!한번에 하나!!ㅞㅡ의 component만 redering 할 수 있음!\nline4=> Food의 fav 속성을 갖고 옴\nline16=> fav라는 이름의 속성을  kimchi라는 value로 줌\nline48=> isRequired를 없애면 name이 없어도 오류X 왜? 필수 아니니까\nline73=> setState를 할 때마다 react는 새로운 state와 함께 render함 \nmap은 array의 각 item에서 function을 실행하는 array를 가지는 JS function이며\n그 function의 result를 갖는 array를 나에게 줌\nreact는  class component의 render를 자동으로 실행함\nclass component를 사용하는 이유는 state, state는 object이고 data가 변함\nmounting()은 태어나는 것과 같음 Update(), Unmounting()은 component가 죽는 것을 의미함\naxios는 fetch 위의 작은 layer\n*/\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//JSX => javaScript + HTML"],"sourceRoot":""}